// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SmartMenu.Entities;

#nullable disable

namespace SmartMenu.Data.Migrations
{
    [DbContext(typeof(SmartMenuContext))]
    [Migration("20240523092153_InitializeDatabase")]
    partial class InitializeDatabase
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("SmartMenu.Entities.Attribute", b =>
                {
                    b.Property<int>("AttributeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AttributeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AttributeId"));

                    b.Property<string>("AttributeCode")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("AttributeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateOnly>("CreateDate")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GroupAttributeId")
                        .HasColumnType("int")
                        .HasColumnName("GroupAttributeID");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("UpdateDate")
                        .HasColumnType("date");

                    b.HasKey("AttributeId")
                        .HasName("PK__Attribut__C189298A89953090");

                    b.HasIndex("GroupAttributeId");

                    b.HasIndex(new[] { "AttributeCode" }, "UQ__Attribut__BD3ED16E6C732899")
                        .IsUnique();

                    b.ToTable("Attribute", (string)null);
                });

            modelBuilder.Entity("SmartMenu.Entities.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BrandID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandId"));

                    b.Property<string>("BrandCode")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateOnly>("CreateDate")
                        .HasColumnType("date");

                    b.Property<string>("ImageName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("BrandId")
                        .HasName("PK__Brand__DAD4F3BE70E226A6");

                    b.HasIndex(new[] { "BrandCode" }, "UQ__Brand__44292CC75B7D16E0")
                        .IsUnique();

                    b.ToTable("Brand", (string)null);
                });

            modelBuilder.Entity("SmartMenu.Entities.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int")
                        .HasColumnName("BrandID");

                    b.Property<string>("CategoryCode")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateOnly>("CreateDate")
                        .HasColumnType("date");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("UpdateDate")
                        .HasColumnType("date");

                    b.HasKey("CategoryId")
                        .HasName("PK__Category__19093A2BBF15EADD");

                    b.HasIndex("BrandId");

                    b.HasIndex(new[] { "CategoryCode" }, "UQ__Category__371BA955E99614AD")
                        .IsUnique();

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("SmartMenu.Entities.CustomerSegment", b =>
                {
                    b.Property<int>("SegmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SegmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SegmentId"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int")
                        .HasColumnName("BrandID");

                    b.Property<DateOnly>("CreateDate")
                        .HasColumnType("date");

                    b.Property<string>("SegmentCode")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("SegmentName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("UpdateDate")
                        .HasColumnType("date");

                    b.HasKey("SegmentId")
                        .HasName("PK__Customer__C680609BB7D25D05");

                    b.HasIndex("BrandId");

                    b.HasIndex(new[] { "SegmentCode" }, "UQ__Customer__4A834E881EA0AED9")
                        .IsUnique();

                    b.ToTable("CustomerSegment", (string)null);
                });

            modelBuilder.Entity("SmartMenu.Entities.CustomerVisit", b =>
                {
                    b.Property<int>("CustomerVisitId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CustomerVisitID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerVisitId"));

                    b.Property<DateOnly>("CreateDate")
                        .HasColumnType("date");

                    b.Property<string>("ImageCustomerName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ImageCustomerUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SegmentId")
                        .HasColumnType("int")
                        .HasColumnName("SegmentID");

                    b.HasKey("CustomerVisitId")
                        .HasName("PK__Customer__1DE5EEC1073D479D");

                    b.ToTable("CustomerVisit", (string)null);
                });

            modelBuilder.Entity("SmartMenu.Entities.GroupAttribute", b =>
                {
                    b.Property<int>("GroupAttributeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("GroupAttributeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GroupAttributeId"));

                    b.Property<DateOnly>("CreateDate")
                        .HasColumnType("date");

                    b.Property<string>("GroupAttributeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("GroupAttributeId")
                        .HasName("PK__GroupAtt__2B6E4566D3469924");

                    b.ToTable("GroupAttribute", (string)null);
                });

            modelBuilder.Entity("SmartMenu.Entities.Menu", b =>
                {
                    b.Property<int>("MenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("MenuID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MenuId"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int")
                        .HasColumnName("BrandID");

                    b.Property<DateOnly>("CreateDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("MenuCode")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("MenuId")
                        .HasName("PK__Menu__C99ED250059E30AB");

                    b.HasIndex("BrandId");

                    b.HasIndex(new[] { "MenuCode" }, "UQ__Menu__868A3A730E6598F6")
                        .IsUnique();

                    b.ToTable("Menu", (string)null);
                });

            modelBuilder.Entity("SmartMenu.Entities.MenuSegment", b =>
                {
                    b.Property<int>("MenuId")
                        .HasColumnType("int")
                        .HasColumnName("MenuID");

                    b.Property<int>("SegmentId")
                        .HasColumnType("int")
                        .HasColumnName("SegmentID");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.HasKey("MenuId", "SegmentId")
                        .HasName("PK__MenuSegm__65F6D459C6946D3B");

                    b.HasIndex("SegmentId");

                    b.ToTable("MenuSegment", (string)null);
                });

            modelBuilder.Entity("SmartMenu.Entities.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int")
                        .HasColumnName("BrandID");

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.Property<DateOnly>("CreateDate")
                        .HasColumnType("date");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProductCode")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("SpotlightVideoImageName")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)")
                        .HasColumnName("SpotlightVideo_ImageName");

                    b.Property<string>("SpotlightVideoImageUrl")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("SpotlightVideo_ImageUrl");

                    b.HasKey("ProductId")
                        .HasName("PK__Product__B40CC6EDE2BB1874");

                    b.HasIndex("CategoryId");

                    b.HasIndex(new[] { "ProductCode" }, "UQ__Product__2F4E024FCEE9DA0B")
                        .IsUnique();

                    b.ToTable("Product", (string)null);
                });

            modelBuilder.Entity("SmartMenu.Entities.ProductMenu", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<int>("MenuId")
                        .HasColumnType("int")
                        .HasColumnName("MenuID");

                    b.Property<int?>("DisplayIndex")
                        .HasColumnType("int");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "MenuId")
                        .HasName("PK__ProductM__A8952BC8A90601A9");

                    b.HasIndex("MenuId");

                    b.ToTable("ProductMenu", (string)null);
                });

            modelBuilder.Entity("SmartMenu.Entities.Screen", b =>
                {
                    b.Property<int>("ScreenId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ScreenID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScreenId"));

                    b.Property<int>("StoreId")
                        .HasColumnType("int")
                        .HasColumnName("StoreID");

                    b.HasKey("ScreenId")
                        .HasName("PK__Screen__0AB60F85BEF7FCFC");

                    b.HasIndex("StoreId");

                    b.ToTable("Screen", (string)null);
                });

            modelBuilder.Entity("SmartMenu.Entities.ScreenMenu", b =>
                {
                    b.Property<DateOnly>("FromTime")
                        .HasColumnType("date");

                    b.Property<int>("MenuId")
                        .HasColumnType("int")
                        .HasColumnName("MenuID");

                    b.Property<int>("ScreenId")
                        .HasColumnType("int")
                        .HasColumnName("ScreenID");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateOnly>("ToTime")
                        .HasColumnType("date");

                    b.HasIndex("MenuId");

                    b.HasIndex("ScreenId");

                    b.ToTable("ScreenMenu", (string)null);
                });

            modelBuilder.Entity("SmartMenu.Entities.SegmentAttribute", b =>
                {
                    b.Property<int>("AttributeId")
                        .HasColumnType("int")
                        .HasColumnName("AttributeID");

                    b.Property<int>("SegmentId")
                        .HasColumnType("int")
                        .HasColumnName("SegmentID");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(125)
                        .HasColumnType("nvarchar(125)");

                    b.HasIndex("AttributeId");

                    b.HasIndex("SegmentId");

                    b.ToTable("SegmentAttribute", (string)null);
                });

            modelBuilder.Entity("SmartMenu.Entities.Store", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StoreID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StoreId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<int>("BrandId")
                        .HasColumnType("int")
                        .HasColumnName("BrandID");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("nvarchar(150)");

                    b.Property<DateOnly>("CreateDate")
                        .HasColumnType("date");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("StoreCode")
                        .IsRequired()
                        .HasMaxLength(36)
                        .HasColumnType("nvarchar(36)");

                    b.Property<DateOnly?>("UpdateDate")
                        .HasColumnType("date");

                    b.HasKey("StoreId")
                        .HasName("PK__Store__3B82F0E16B33AA1D");

                    b.HasIndex("BrandId");

                    b.HasIndex(new[] { "StoreCode" }, "UQ__Store__02A384F87841C4D5")
                        .IsUnique();

                    b.ToTable("Store", (string)null);
                });

            modelBuilder.Entity("SmartMenu.Entities.VisitAttribute", b =>
                {
                    b.Property<int>("CustomerVisitId")
                        .HasColumnType("int")
                        .HasColumnName("CustomerVisitID");

                    b.Property<int>("AttributeId")
                        .HasColumnType("int")
                        .HasColumnName("AttributeID");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("CustomerVisitId", "AttributeId")
                        .HasName("PK__VisitAtt__A1FD7C59CCC39901");

                    b.HasIndex("AttributeId");

                    b.ToTable("VisitAttribute", (string)null);
                });

            modelBuilder.Entity("SmartMenu.Entities.Attribute", b =>
                {
                    b.HasOne("SmartMenu.Entities.GroupAttribute", "GroupAttribute")
                        .WithMany("Attributes")
                        .HasForeignKey("GroupAttributeId")
                        .IsRequired()
                        .HasConstraintName("FK__Attribute__Group__4CA06362");

                    b.Navigation("GroupAttribute");
                });

            modelBuilder.Entity("SmartMenu.Entities.Category", b =>
                {
                    b.HasOne("SmartMenu.Entities.Brand", "Brand")
                        .WithMany("Categories")
                        .HasForeignKey("BrandId")
                        .IsRequired()
                        .HasConstraintName("FK__Category__BrandI__3F466844");

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("SmartMenu.Entities.CustomerSegment", b =>
                {
                    b.HasOne("SmartMenu.Entities.Brand", "Brand")
                        .WithMany("CustomerSegments")
                        .HasForeignKey("BrandId")
                        .IsRequired()
                        .HasConstraintName("FK__CustomerS__Brand__46E78A0C");

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("SmartMenu.Entities.Menu", b =>
                {
                    b.HasOne("SmartMenu.Entities.Brand", "Brand")
                        .WithMany("Menus")
                        .HasForeignKey("BrandId")
                        .IsRequired()
                        .HasConstraintName("FK__Menu__BrandID__534D60F1");

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("SmartMenu.Entities.MenuSegment", b =>
                {
                    b.HasOne("SmartMenu.Entities.Menu", "Menu")
                        .WithMany("MenuSegments")
                        .HasForeignKey("MenuId")
                        .IsRequired()
                        .HasConstraintName("FK__MenuSegme__MenuI__5BE2A6F2");

                    b.HasOne("SmartMenu.Entities.CustomerSegment", "Segment")
                        .WithMany("MenuSegments")
                        .HasForeignKey("SegmentId")
                        .IsRequired()
                        .HasConstraintName("FK__MenuSegme__Segme__5CD6CB2B");

                    b.Navigation("Menu");

                    b.Navigation("Segment");
                });

            modelBuilder.Entity("SmartMenu.Entities.Product", b =>
                {
                    b.HasOne("SmartMenu.Entities.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .IsRequired()
                        .HasConstraintName("FK__Product__Categor__4316F928");

                    b.Navigation("Category");
                });

            modelBuilder.Entity("SmartMenu.Entities.ProductMenu", b =>
                {
                    b.HasOne("SmartMenu.Entities.Menu", "Menu")
                        .WithMany("ProductMenus")
                        .HasForeignKey("MenuId")
                        .IsRequired()
                        .HasConstraintName("FK__ProductMe__MenuI__571DF1D5");

                    b.HasOne("SmartMenu.Entities.Product", "Product")
                        .WithMany("ProductMenus")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__ProductMe__Produ__5629CD9C");

                    b.Navigation("Menu");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("SmartMenu.Entities.Screen", b =>
                {
                    b.HasOne("SmartMenu.Entities.Store", "Store")
                        .WithMany("Screens")
                        .HasForeignKey("StoreId")
                        .IsRequired()
                        .HasConstraintName("FK__Screen__StoreID__6383C8BA");

                    b.Navigation("Store");
                });

            modelBuilder.Entity("SmartMenu.Entities.ScreenMenu", b =>
                {
                    b.HasOne("SmartMenu.Entities.Menu", "Menu")
                        .WithMany()
                        .HasForeignKey("MenuId")
                        .IsRequired()
                        .HasConstraintName("FK__ScreenMen__MenuI__66603565");

                    b.HasOne("SmartMenu.Entities.Screen", "Screen")
                        .WithMany()
                        .HasForeignKey("ScreenId")
                        .IsRequired()
                        .HasConstraintName("FK__ScreenMen__Scree__656C112C");

                    b.Navigation("Menu");

                    b.Navigation("Screen");
                });

            modelBuilder.Entity("SmartMenu.Entities.SegmentAttribute", b =>
                {
                    b.HasOne("SmartMenu.Entities.Attribute", "Attribute")
                        .WithMany()
                        .HasForeignKey("AttributeId")
                        .IsRequired()
                        .HasConstraintName("FK__SegmentAt__Attri__4F7CD00D");

                    b.HasOne("SmartMenu.Entities.CustomerSegment", "Segment")
                        .WithMany()
                        .HasForeignKey("SegmentId")
                        .IsRequired()
                        .HasConstraintName("FK__SegmentAt__Segme__4E88ABD4");

                    b.Navigation("Attribute");

                    b.Navigation("Segment");
                });

            modelBuilder.Entity("SmartMenu.Entities.Store", b =>
                {
                    b.HasOne("SmartMenu.Entities.Brand", "Brand")
                        .WithMany("Stores")
                        .HasForeignKey("BrandId")
                        .IsRequired()
                        .HasConstraintName("FK__Store__BrandID__3B75D760");

                    b.Navigation("Brand");
                });

            modelBuilder.Entity("SmartMenu.Entities.VisitAttribute", b =>
                {
                    b.HasOne("SmartMenu.Entities.Attribute", "Attribute")
                        .WithMany("VisitAttributes")
                        .HasForeignKey("AttributeId")
                        .IsRequired()
                        .HasConstraintName("FK__VisitAttr__Attri__60A75C0F");

                    b.HasOne("SmartMenu.Entities.CustomerVisit", "CustomerVisit")
                        .WithMany("VisitAttributes")
                        .HasForeignKey("CustomerVisitId")
                        .IsRequired()
                        .HasConstraintName("FK__VisitAttr__Custo__5FB337D6");

                    b.Navigation("Attribute");

                    b.Navigation("CustomerVisit");
                });

            modelBuilder.Entity("SmartMenu.Entities.Attribute", b =>
                {
                    b.Navigation("VisitAttributes");
                });

            modelBuilder.Entity("SmartMenu.Entities.Brand", b =>
                {
                    b.Navigation("Categories");

                    b.Navigation("CustomerSegments");

                    b.Navigation("Menus");

                    b.Navigation("Stores");
                });

            modelBuilder.Entity("SmartMenu.Entities.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("SmartMenu.Entities.CustomerSegment", b =>
                {
                    b.Navigation("MenuSegments");
                });

            modelBuilder.Entity("SmartMenu.Entities.CustomerVisit", b =>
                {
                    b.Navigation("VisitAttributes");
                });

            modelBuilder.Entity("SmartMenu.Entities.GroupAttribute", b =>
                {
                    b.Navigation("Attributes");
                });

            modelBuilder.Entity("SmartMenu.Entities.Menu", b =>
                {
                    b.Navigation("MenuSegments");

                    b.Navigation("ProductMenus");
                });

            modelBuilder.Entity("SmartMenu.Entities.Product", b =>
                {
                    b.Navigation("ProductMenus");
                });

            modelBuilder.Entity("SmartMenu.Entities.Store", b =>
                {
                    b.Navigation("Screens");
                });
#pragma warning restore 612, 618
        }
    }
}
